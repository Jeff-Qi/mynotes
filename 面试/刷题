1.  Apache工作机制和Nginx工作机制对比分析
    - apache多线程工作机制，nginx采用事件驱动；相对于多进程来说，nginx的事件驱动在高并发是更有优势；因为apache在处理请求的时候，是通过一个进程或一个线程对用户的请求进行回应，这个进程和线程需要提前准备好，所以会在系统中占用着内存等资源；每次有链接过来，就需要准备好新的进程或线程；而过多的链接会导致，进程线程之间的切换上下文开销大，增加负担；而nginx通过事件驱动来运行，同时一个进程处理多个请求，采用异步、单线程非阻塞，能够处理更多的请求；

2.  进程间通信方式（管道的应用场景）
    - FIFO可以用于复制一系列shell命令中的输出流。这就防止了将数据写向中间磁盘文件；

3.  cpu load x （x这个值代表什么意思）
    - 负载值？？平均负载

4.  如何查看进程使用到的文件
    - lsof -u

5.  kill和kill -9的区别，有没有更优雅的方式kill进程
    - kill默认为-15信号，可以被捕获进程到这个信息，如果没有就直接kill掉；kill -9是直接直接结束进程；

6.  buffer和cache的区别
    - buffer是为了系统两端处理速度平衡使用的，为了减小短期的突发io，如生产者消费者模型；cache是为了缓解cpu高速的处理速度和系统memory的低速io之间的不平衡，同时使用不同的等级来缓解这种问题；

7.  资源隔离和资源限制相关问题

8.  容器和VM的区别
    - vm虚拟机，是通过在操作系统之上再模拟一个完整的操作系统使用，如果有多个虚拟机，就有多个操作系统独立进行，每个操作系统都会单独占用资源，所以资源使用比较多；容器是更加轻量级的虚拟，没有独立的操作系统，而是和主机公用一个操作系统，主机只需要为期分配一定的资源就可以了；

9.  hash表是什么，如何解决hash冲突
    - hash函数就是根据key计算出应该存储地址的位置，而哈希表是基于哈希函数建立的一种查找表；
    - 解决冲突：
        1.  链表地址法：产生hash冲突后在存储数据后面加一个指针，指向后面冲突的数据
        2.  再散列法：准备多个hash函数
        3.  开放地址：当发生地址冲突时，按照某种方法继续探测哈希表中的其他存储单元，直到找到空位置为止
